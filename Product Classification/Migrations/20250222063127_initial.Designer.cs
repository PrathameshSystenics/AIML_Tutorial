// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductClassification.Data;

#nullable disable

namespace ProductClassification.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250222063127_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductClassification.Models.EvaluatedResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EvaluationBatchID")
                        .HasColumnType("integer");

                    b.Property<int>("EvaluationDataID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("EvaluationBatchID");

                    b.HasIndex("EvaluationDataID");

                    b.ToTable("EvaluatedResult");
                });

            modelBuilder.Entity("ProductClassification.Models.EvaluationBatch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("EvaluationBatch");
                });

            modelBuilder.Entity("ProductClassification.Models.EvaluationData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("EvaluationData");
                });

            modelBuilder.Entity("ProductClassification.Models.PromptData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("EvaluationBatchID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemPrompt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("EvaluationBatchID")
                        .IsUnique();

                    b.ToTable("PromptData");
                });

            modelBuilder.Entity("ProductClassification.Models.EvaluatedResult", b =>
                {
                    b.HasOne("ProductClassification.Models.EvaluationBatch", "EvaluationBatch")
                        .WithMany("EvaluatedResults")
                        .HasForeignKey("EvaluationBatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductClassification.Models.EvaluationData", "EvaluationData")
                        .WithMany("EvaluatedResults")
                        .HasForeignKey("EvaluationDataID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluationBatch");

                    b.Navigation("EvaluationData");
                });

            modelBuilder.Entity("ProductClassification.Models.PromptData", b =>
                {
                    b.HasOne("ProductClassification.Models.EvaluationBatch", "EvaluationBatch")
                        .WithOne("PromptData")
                        .HasForeignKey("ProductClassification.Models.PromptData", "EvaluationBatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluationBatch");
                });

            modelBuilder.Entity("ProductClassification.Models.EvaluationBatch", b =>
                {
                    b.Navigation("EvaluatedResults");

                    b.Navigation("PromptData")
                        .IsRequired();
                });

            modelBuilder.Entity("ProductClassification.Models.EvaluationData", b =>
                {
                    b.Navigation("EvaluatedResults");
                });
#pragma warning restore 612, 618
        }
    }
}
